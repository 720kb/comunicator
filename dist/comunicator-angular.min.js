/*
 * comunicator - v1.1.2
 *
 * The 720kb notifier api (atm it uses websockets)
 * https://github.com/720kb/comunicator
 * MIT license
 * 2015-04-18T11:31:33.903Z
 */


!function(e){"use strict";var t=function(t){var i=function t(i,o){var n,s;this.chosenTimeWaitValue>0&&this.websocket.readyState!==e.WebSocket.OPEN?(this.chosenTimeWaitValue-=1,n=e.requestAnimationFrame(t.bind(this,i,o)),"send"===o?this.sendPendingRequests.push(n):this.joinPendingRequests.push(n)):(s=this.timeWaitSlice*(Math.pow(2,this.timeWaitSliceChoices.length)-1),this.timeWaitSliceChoices.push(s),this.chosenTimeWaitValue=this.giveMeATimeWait(),i())};this.timeWaitSlice=9e3,this.timeWaitSliceChoices=[0],this.chosenTimeWaitValue=0,this.sendPendingRequests=[],this.joinPendingRequests=[],this.giveMeATimeWait=function(){return Math.floor(Math.random()*(this.timeWaitSliceChoices.length+1))},this._doJoin=function(){var t,o,n,s=i.bind(this,this._doJoin.bind(this),"join"),a=0;if(this.websocket.readyState===e.WebSocket.OPEN){for(this.websocket.push(JSON.stringify({opcode:"join",whoami:this.whoReallyAmI,token:this.reallyToken})),a=0,o=this.joinPendingRequests.length;o>a;a+=1)n=this.joinPendingRequests[a],e.cancelAnimationFrame(n);this.joinPendingRequests=[]}else this.websocket.readyState===e.WebSocket.CONNECTING?(t=e.requestAnimationFrame(s),this.joinPendingRequests.push(t)):(this.initComunicator(this.websocket.url),this.websocket.send=this.sendMessage.bind(this),this.websocket.onmessage=this.onWebsocketMessage.bind(this),this.websocket.onclose=this.onWebsocketClose.bind(this),t=e.requestAnimationFrame(s),this.joinPendingRequests.push(t))},this.onWebsocketMessage=function(t){var i,o=e.JSON.parse(t.data);if("joined"===o.opcode?i=new e.CustomEvent("comunicator:joined"):"sent"===o.opcode?i=new e.CustomEvent("comunicator:to-me",{detail:o}):"broadcasted"===o.opcode&&(i=new e.CustomEvent("comunicator:to-all",{detail:o})),!i)throw"Operation code from comunicator not reconized";e.dispatchEvent(i)},this.onWebsocketClose=function(){this.whoReallyAmI&&this.reallyToken&&(e.dispatchEvent(new e.CustomEvent("comunicator:closed")),(this.websocket.readyState!==e.WebSocket.OPEN||this.websocket.readyState!==e.WebSocket.CONNECTING)&&this._doJoin())},this.sendMessage=function(t,o){var n,s,a,c=i.bind(this,this.sendMessage.bind(this,t,o),"send"),h=0;if(this.websocket.readyState===e.WebSocket.OPEN){for(this.websocket.push(JSON.stringify({opcode:t,token:this.reallyToken,data:o})),h=0,s=this.sendPendingRequests.length;s>h;h+=1)a=this.sendPendingRequests[h],e.cancelAnimationFrame(a);this.sendPendingRequests=[]}else n=e.requestAnimationFrame(c),this.sendPendingRequests.push(n)},this.initComunicator=function(t){if(!t)throw"Please provide a valid URL.";this.websocket=new e.WebSocket(t),this.websocket.onopen=function(){e.console.info("Trasport",this,"opened.")},this.websocket.push=this.websocket.send,this.websocket.send=this.sendMessage.bind(this),this.websocket.onmessage=this.onWebsocketMessage.bind(this),this.websocket.onclose=this.onWebsocketClose.bind(this)},this.initComunicator(t)};t.prototype.promise=function(t){if(!this.websocket)throw"Mandatory field comunicatorServerURL required";if(t&&Array.isArray(t)){var i=function(i){var o,n,s=t.length,a=function(t,i){if(this.whoReallyAmI!==t||this.reallyToken!==i){if(this.whoReallyAmI=t,this.reallyToken=i,!this.whoReallyAmI||!this.reallyToken)throw"User identification datas missing.";this._doJoin()}else e.console.info("User is already identified.")},c=function(e){if(!this.whoReallyAmI||!this.websocket)throw"User identification required";var t={whoami:this.whoReallyAmI,who:"*",what:e};this.websocket.send("broadcast",t)},h=function(e,t){if(!this.whoReallyAmI||!this.websocket)throw"User identification required";var i={whoami:this.whoReallyAmI,who:e,what:t};this.websocket.send("sendTo",i)},r=function(){this.websocket.readyState===e.WebSocket.OPEN&&this.websocket.close()},d=function d(){for(o=0;s>o;o+=1)n=t[o],n&&e.removeEventListener(n,d,!1);i({userIsPresent:a.bind(this),broadcast:c.bind(this),sendTo:h.bind(this),exit:r.bind(this)})};for(o=0;s>o;o+=1)n=t[o],n&&e.addEventListener(n,d.bind(this),!1)};return new Promise(i.bind(this))}throw"events must be defined and must be an array"},e.Comunicator=t}(window),function(e,t){"use strict";e.module("720kb.comunicator",[]).provider("Comunicator",function(){var e,i=function(i){e=new t(i)};return{setComunicatorServerURL:i,$get:["$rootScope","$window","$log",function(t,i,o){var n,s=function(){t.$apply(function(e){e.$emit("comunicator:joined")}),o.debug("comunicator:joined dispatched")},a=function(e){t.$apply(function(t){t.$emit("comunicator:to-me",e.detail)}),o.debug("comunicator:to-me dispatched")},c=function(e){t.$apply(function(t){t.$emit("comunicator:to-all",e.detail)}),o.debug("comunicator:to-all dispatched")},h=function(){t.$apply(function(e){e.$emit("comunicator:closed")}),o.debug("comunicator:closed dispatched")},r=["$stateChangeSuccess","$routeChangeSuccess"],d="comunicator:ready",u=[],m=r.length,l=0,b=function(){for(var e=0,t=u.length,n=new i.Event(d);t>e;e+=1)u[e]();i.dispatchEvent(n),o.debug("KickOff DOM Event triggered")};for(i.addEventListener("comunicator:joined",s,!1),i.addEventListener("comunicator:to-me",a,!1),i.addEventListener("comunicator:to-all",c,!1),i.addEventListener("comunicator:closed",h,!1),t.$on("$destroy",function(){i.removeEventListener("comunicator:joined",s,!1),i.removeEventListener("comunicator:to-me",a,!1),i.removeEventListener("comunicator:to-all",c,!1),i.removeEventListener("comunicator:closed",h,!1)});m>l;l+=1)n=r[l],u.push(t.$on(n,b));return e.promise([d])}]}})}(angular,Comunicator);
//# sourceMappingURL=comunicator-angular.min.js.map