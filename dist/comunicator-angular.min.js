/*
 * comunicator - v1.0.0
 *
 * The 720kb notifier api (atm it uses websockets)
 * https://github.com/720kb/comunicator
 * MIT license
 * 2015-04-17T17:34:34.823Z
 */


!function(e){"use strict";for(var t=0,i=["ms","moz","webkit","o"],n=0;n<i.length&&!e.requestAnimationFrame;n+=1)e.requestAnimationFrame=e[i[n]+"RequestAnimationFrame"],e.cancelAnimationFrame=e[i[n]+"CancelAnimationFrame"]||e[i[n]+"CancelRequestAnimationFrame"];e.requestAnimationFrame||(e.requestAnimationFrame=function(i){var n=(new Date).getTime(),o=Math.max(0,16-(n-t)),s=e.setTimeout(function(){i(n+o)},o);return t=n+o,s}),e.cancelAnimationFrame||(e.cancelAnimationFrame=function(t){e.clearTimeout(t)})}(window),function(e){"use strict";var t=function(t){var i=function t(i,n){var o,s;this.chosenTimeWaitValue>0&&this.websocket.readyState!==e.WebSocket.OPEN?(this.chosenTimeWaitValue-=1,o=e.requestAnimationFrame(t.bind(this,i,n)),"send"===n?this.sendPendingRequests.push(o):this.joinPendingRequests.push(o)):(s=this.timeWaitSlice*(Math.pow(2,this.timeWaitSliceChoices.length)-1),this.timeWaitSliceChoices.push(s),this.chosenTimeWaitValue=this.giveMeATimeWait(),i())};this.timeWaitSlice=300,this.timeWaitSliceChoices=[0],this.chosenTimeWaitValue=0,this.sendPendingRequests=[],this.joinPendingRequests=[],this.giveMeATimeWait=function(){return Math.floor(Math.random()*(this.timeWaitSliceChoices.length+1))},this._doJoin=function(){var t,n,o,s=i.bind(this,this._doJoin.bind(this),"join"),a=0;if(this.websocket.readyState===e.WebSocket.OPEN){for(this.websocket.push(JSON.stringify({opcode:"join",whoami:this.whoReallyAmI,token:this.reallyToken})),a=0,n=this.joinPendingRequests.length;n>a;a+=1)o=this.joinPendingRequests[a],e.cancelAnimationFrame(o);this.joinPendingRequests=[]}else this.websocket.readyState===e.WebSocket.CONNECTING?(t=e.requestAnimationFrame(s),this.joinPendingRequests.push(t)):(this.initComunicator(this.websocket.url),this.websocket.send=this.sendMessage.bind(this),this.websocket.onmessage=this.onWebsocketMessage.bind(this),this.websocket.onclose=this.onWebsocketClose.bind(this),t=e.requestAnimationFrame(s),this.joinPendingRequests.push(t))},this.onWebsocketMessage=function(t){var i,n=e.JSON.parse(t.data);if("joined"===n.opcode?i=new e.CustomEvent("comunicator:joined"):"sent"===n.opcode?i=new e.CustomEvent("comunicator:to-me",{detail:n}):"broadcasted"===n.opcode&&(i=new e.CustomEvent("comunicator:to-all",{detail:n})),!i)throw"Operation code from comunicator not reconized";e.dispatchEvent(i)},this.onWebsocketClose=function(){this.whoReallyAmI&&this.reallyToken&&(e.dispatchEvent(new e.CustomEvent("comunicator:closed")),(this.websocket.readyState!==e.WebSocket.OPEN||this.websocket.readyState!==e.WebSocket.CONNECTING)&&this._doJoin())},this.sendMessage=function(t,n){var o,s,a,c=i.bind(this,this.sendMessage.bind(this,t,n),"send"),r=0;if(this.websocket.readyState===e.WebSocket.OPEN){for(this.websocket.push(JSON.stringify({opcode:t,token:this.reallyToken,data:n})),r=0,s=this.sendPendingRequests.length;s>r;r+=1)a=this.sendPendingRequests[r],e.cancelAnimationFrame(a);this.sendPendingRequests=[]}else o=e.requestAnimationFrame(c),this.sendPendingRequests.push(o)},this.initComunicator=function(t){if(!t)throw"Please provide a valid URL.";this.websocket=new e.WebSocket(t),this.websocket.onopen=function(){e.console.info("Trasport",this,"opened.")},this.websocket.push=this.websocket.send,this.websocket.send=this.sendMessage.bind(this),this.websocket.onmessage=this.onWebsocketMessage.bind(this),this.websocket.onclose=this.onWebsocketClose.bind(this)},this.initComunicator(t)};t.prototype.promise=function(t){if(!this.websocket)throw"Mandatory field comunicatorServerURL required";if(t&&Array.isArray(t)){var i=function(i){var n,o,s=t.length,a=function(e,t){if(this.whoReallyAmI=e,this.reallyToken=t,!this.whoReallyAmI||!this.reallyToken)throw"User identification datas missing.";this._doJoin()},c=function(e){if(!this.whoReallyAmI||!this.websocket)throw"User identification required";var t={whoami:this.whoReallyAmI,who:"*",what:e};this.websocket.send("broadcast",t)},r=function(e,t){if(!this.whoReallyAmI||!this.websocket)throw"User identification required";var i={whoami:this.whoReallyAmI,who:e,what:t};this.websocket.send("sendTo",i)},h=function(){this.websocket.readyState===e.WebSocket.OPEN&&this.websocket.close()},d=function d(){for(n=0;s>n;n+=1)o=t[n],o&&e.removeEventListener(o,d,!1);i({userIsPresent:a.bind(this),broadcast:c.bind(this),sendTo:r.bind(this),exit:h.bind(this)})};for(n=0;s>n;n+=1)o=t[n],o&&e.addEventListener(o,d.bind(this),!1)};return new Promise(i.bind(this))}throw"events must be defined and must be an array"},e.Comunicator=t}(window),function(e,t){"use strict";e.module("720kb.comunicator",[]).provider("Comunicator",function(){var e,i=function(i){e=new t(i)};return{setComunicatorServerURL:i,$get:["$rootScope","$window","$log",function(t,i,n){var o,s=function(){t.$apply(function(e){e.$emit("comunicator:joined")}),n.debug("comunicator:joined dispatched")},a=function(e){t.$apply(function(t){t.$emit("comunicator:to-me",e.detail)}),n.debug("comunicator:to-me dispatched")},c=function(e){t.$apply(function(t){t.$emit("comunicator:to-all",e.detail)}),n.debug("comunicator:to-all dispatched")},r=function(){t.$apply(function(e){e.$emit("comunicator:closed")}),n.debug("comunicator:closed dispatched")},h=["$stateChangeSuccess","$routeChangeSuccess"],d="comunicator:ready",u=[],m=h.length,l=0,b=function(){for(var e=0,t=u.length,o=new i.Event(d);t>e;e+=1)u[e]();i.dispatchEvent(o),n.debug("KickOff DOM Event triggered")};for(i.addEventListener("comunicator:joined",s,!1),i.addEventListener("comunicator:to-me",a,!1),i.addEventListener("comunicator:to-all",c,!1),i.addEventListener("comunicator:closed",r,!1),t.$on("$destroy",function(){i.removeEventListener("comunicator:joined",s,!1),i.removeEventListener("comunicator:to-me",a,!1),i.removeEventListener("comunicator:to-all",c,!1),i.removeEventListener("comunicator:closed",r,!1)});m>l;l+=1)o=h[l],u.push(t.$on(o,b));return e.promise([d])}]}})}(angular,Comunicator);
//# sourceMappingURL=comunicator-angular.min.js.map