/*
 * comunicator - v2.2.4
 *
 * The 720kb notifier api (atm it uses websockets)
 * https://github.com/720kb/comunicator
 * MIT license
 * 2016-01-28T21:29:43.373Z
 */


!function(e){"use strict";var t=function(t){var i=function t(i,o){var n,s;this.chosenTimeWaitValue>0&&this.websocket.readyState!==e.WebSocket.OPEN?(this.chosenTimeWaitValue-=1,n=e.requestAnimationFrame(t.bind(this,i,o)),"send"===o?this.sendPendingRequests.push(n):this.joinPendingRequests.push(n)):(s=this.timeWaitSlice*(Math.pow(2,this.timeWaitSliceChoices.length)-1),this.timeWaitSliceChoices.push(s),this.chosenTimeWaitValue=this.giveMeATimeWait(),i())},o=function(t){var i=function(t,i){if(this.whoReallyAmI!==t||this.reallyToken!==i){if(this.whoReallyAmI=t,this.reallyToken=i,!this.whoReallyAmI||!this.reallyToken)throw"User identification datas missing.";this.doJoin()}else e.console.info("User is already identified.")},o=function(e,t){if(!this.whoReallyAmI||!this.websocket)throw"User identification required";var i={whoami:this.whoReallyAmI,who:"*",what:e};t&&(i.managed=!0),this.websocket.send("broadcast",i)},n=function(e,t,i){if(!this.whoReallyAmI||!this.websocket)throw"User identification required";var o={whoami:this.whoReallyAmI,who:e,what:t};i&&(o.managed=!0),this.websocket.send("sendTo",o)},s=function(){this.whoReallyAmI&&this.reallyToken&&this.websocket.readyState===e.WebSocket.OPEN&&(this.whoReallyAmI=void 0,this.reallyToken=void 0,this.websocket.close())},a=function(){return this.whoReallyAmI},c=function c(){e.removeEventListener(this.eventToListen,c,!1),t({whoAmI:a.bind(this),userIsPresent:i.bind(this),broadcast:o.bind(this),sendTo:n.bind(this),exit:s.bind(this)})};e.addEventListener(this.eventToListen,c.bind(this),!1)};return this.eventToListen="comunicator:ready",this.timeWaitSlice=9e3,this.timeWaitSliceChoices=[0],this.chosenTimeWaitValue=0,this.sendPendingRequests=[],this.joinPendingRequests=[],this.giveMeATimeWait=function(){return Math.floor(Math.random()*(this.timeWaitSliceChoices.length+1))},this.doJoin=function(){var t,o,n,s=i.bind(this,this.doJoin.bind(this),"join"),a=0;if(this.websocket.readyState===e.WebSocket.OPEN){for(this.websocket.push(e.JSON.stringify({opcode:"join",whoami:this.whoReallyAmI,token:this.reallyToken})),o=this.joinPendingRequests.length;o>a;a+=1)n=this.joinPendingRequests[a],e.cancelAnimationFrame(n);this.joinPendingRequests=[]}else this.websocket.readyState===e.WebSocket.CONNECTING?(t=e.requestAnimationFrame(s),this.joinPendingRequests.push(t)):(this.initComunicator(this.websocket.url),this.websocket.send=this.sendMessage.bind(this),this.websocket.onmessage=this.onWebsocketMessage.bind(this),this.websocket.onclose=this.onWebsocketClose.bind(this),t=e.requestAnimationFrame(s),this.joinPendingRequests.push(t))},this.onWebsocketMessage=function(t){var i,o=e.JSON.parse(t.data);if("joined"===o.opcode?i=new e.CustomEvent("comunicator:joined"):"sent"===o.opcode?i=new e.CustomEvent("comunicator:to-me",{detail:o}):"broadcasted"===o.opcode&&(i=new e.CustomEvent("comunicator:to-all",{detail:o})),!i)throw"Operation code from comunicator not reconized";e.dispatchEvent(i)},this.onWebsocketClose=function(){this.whoReallyAmI&&this.reallyToken&&(e.dispatchEvent(new e.CustomEvent("comunicator:closed")),(this.websocket.readyState!==e.WebSocket.OPEN||this.websocket.readyState!==e.WebSocket.CONNECTING)&&this.doJoin())},this.sendMessage=function(t,o){var n,s,a,c=i.bind(this,this.sendMessage.bind(this,t,o),"send"),h=0;if(this.websocket.readyState===e.WebSocket.OPEN){for(this.websocket.push(e.JSON.stringify({opcode:t,token:this.reallyToken,data:o})),s=this.sendPendingRequests.length;s>h;h+=1)a=this.sendPendingRequests[h],e.cancelAnimationFrame(a);this.sendPendingRequests=[]}else n=e.requestAnimationFrame(c),this.sendPendingRequests.push(n)},this.initComunicator=function(t){if(!t)throw"Please provide a valid URL.";var i=this;this.websocket=new e.WebSocket(t),this.websocket.onopen=function(){e.console.info("Trasport",this,"opened."),e.dispatchEvent(new e.CustomEvent(i.eventToListen))},this.websocket.push=this.websocket.send,this.websocket.send=this.sendMessage.bind(this),this.websocket.onmessage=this.onWebsocketMessage.bind(this),this.websocket.onclose=this.onWebsocketClose.bind(this)},this.initComunicator(t),new e.Promise(o.bind(this))};e.Comunicator=t}(window),function(e,t){"use strict";e.module("720kb.comunicator",[]).provider("Comunicator",function(){var e,i=function(i){return e=new t(i)};return{setComunicatorServerURL:i,$get:["$rootScope","$window","$log",function(t,i,o){var n=function(){t.$apply(function(e){e.$emit("comunicator:joined")}),o.debug("comunicator:joined dispatched")},s=function(e){t.$apply(function(t){t.$emit("comunicator:to-me",e.detail)}),o.debug("comunicator:to-me dispatched")},a=function(e){t.$apply(function(t){t.$emit("comunicator:to-all",e.detail)}),o.debug("comunicator:to-all dispatched")},c=function(){t.$apply(function(e){e.$emit("comunicator:closed")}),o.debug("comunicator:closed dispatched")};return i.addEventListener("comunicator:joined",n,!1),i.addEventListener("comunicator:to-me",s,!1),i.addEventListener("comunicator:to-all",a,!1),i.addEventListener("comunicator:closed",c,!1),t.$on("$destroy",function(){i.removeEventListener("comunicator:joined",n,!1),i.removeEventListener("comunicator:to-me",s,!1),i.removeEventListener("comunicator:to-all",a,!1),i.removeEventListener("comunicator:closed",c,!1)}),e}]}})}(angular,Comunicator);
//# sourceMappingURL=comunicator-angular.min.js.map