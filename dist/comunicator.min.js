/*
 * comunicator - v2.2.3
 *
 * The 720kb notifier api (atm it uses websockets)
 * https://github.com/720kb/comunicator
 * MIT license
 * 2015-10-18T13:12:44.544Z
 */


!function(e){"use strict";var t=function(t){var i=function t(i,s){var n,o;this.chosenTimeWaitValue>0&&this.websocket.readyState!==e.WebSocket.OPEN?(this.chosenTimeWaitValue-=1,n=e.requestAnimationFrame(t.bind(this,i,s)),"send"===s?this.sendPendingRequests.push(n):this.joinPendingRequests.push(n)):(o=this.timeWaitSlice*(Math.pow(2,this.timeWaitSliceChoices.length)-1),this.timeWaitSliceChoices.push(o),this.chosenTimeWaitValue=this.giveMeATimeWait(),i())},s=function(t){var i=function(t,i){if(this.whoReallyAmI!==t||this.reallyToken!==i){if(this.whoReallyAmI=t,this.reallyToken=i,!this.whoReallyAmI||!this.reallyToken)throw"User identification datas missing.";this.doJoin()}else e.console.info("User is already identified.")},s=function(e,t){if(!this.whoReallyAmI||!this.websocket)throw"User identification required";var i={whoami:this.whoReallyAmI,who:"*",what:e};t&&(i.managed=!0),this.websocket.send("broadcast",i)},n=function(e,t,i){if(!this.whoReallyAmI||!this.websocket)throw"User identification required";var s={whoami:this.whoReallyAmI,who:e,what:t};i&&(s.managed=!0),this.websocket.send("sendTo",s)},o=function(){this.whoReallyAmI&&this.reallyToken&&this.websocket.readyState===e.WebSocket.OPEN&&(this.whoReallyAmI=void 0,this.reallyToken=void 0,this.websocket.close())},h=function(){return this.whoReallyAmI},a=function a(){e.removeEventListener(this.eventToListen,a,!1),t({whoAmI:h.bind(this),userIsPresent:i.bind(this),broadcast:s.bind(this),sendTo:n.bind(this),exit:o.bind(this)})};e.addEventListener(this.eventToListen,a.bind(this),!1)};return this.eventToListen="comunicator:ready",this.timeWaitSlice=9e3,this.timeWaitSliceChoices=[0],this.chosenTimeWaitValue=0,this.sendPendingRequests=[],this.joinPendingRequests=[],this.giveMeATimeWait=function(){return Math.floor(Math.random()*(this.timeWaitSliceChoices.length+1))},this.doJoin=function(){var t,s,n,o=i.bind(this,this.doJoin.bind(this),"join"),h=0;if(this.websocket.readyState===e.WebSocket.OPEN){for(this.websocket.push(e.JSON.stringify({opcode:"join",whoami:this.whoReallyAmI,token:this.reallyToken})),s=this.joinPendingRequests.length;s>h;h+=1)n=this.joinPendingRequests[h],e.cancelAnimationFrame(n);this.joinPendingRequests=[]}else this.websocket.readyState===e.WebSocket.CONNECTING?(t=e.requestAnimationFrame(o),this.joinPendingRequests.push(t)):(this.initComunicator(this.websocket.url),this.websocket.send=this.sendMessage.bind(this),this.websocket.onmessage=this.onWebsocketMessage.bind(this),this.websocket.onclose=this.onWebsocketClose.bind(this),t=e.requestAnimationFrame(o),this.joinPendingRequests.push(t))},this.onWebsocketMessage=function(t){var i,s=e.JSON.parse(t.data);if("joined"===s.opcode?i=new e.CustomEvent("comunicator:joined"):"sent"===s.opcode?i=new e.CustomEvent("comunicator:to-me",{detail:s}):"broadcasted"===s.opcode&&(i=new e.CustomEvent("comunicator:to-all",{detail:s})),!i)throw"Operation code from comunicator not reconized";e.dispatchEvent(i)},this.onWebsocketClose=function(){this.whoReallyAmI&&this.reallyToken&&(e.dispatchEvent(new e.CustomEvent("comunicator:closed")),(this.websocket.readyState!==e.WebSocket.OPEN||this.websocket.readyState!==e.WebSocket.CONNECTING)&&this.doJoin())},this.sendMessage=function(t,s){var n,o,h,a=i.bind(this,this.sendMessage.bind(this,t,s),"send"),c=0;if(this.websocket.readyState===e.WebSocket.OPEN){for(this.websocket.push(e.JSON.stringify({opcode:t,token:this.reallyToken,data:s})),o=this.sendPendingRequests.length;o>c;c+=1)h=this.sendPendingRequests[c],e.cancelAnimationFrame(h);this.sendPendingRequests=[]}else n=e.requestAnimationFrame(a),this.sendPendingRequests.push(n)},this.initComunicator=function(t){if(!t)throw"Please provide a valid URL.";var i=this;this.websocket=new e.WebSocket(t),this.websocket.onopen=function(){e.console.info("Trasport",this,"opened."),e.dispatchEvent(new e.CustomEvent(i.eventToListen))},this.websocket.push=this.websocket.send,this.websocket.send=this.sendMessage.bind(this),this.websocket.onmessage=this.onWebsocketMessage.bind(this),this.websocket.onclose=this.onWebsocketClose.bind(this)},this.initComunicator(t),new e.Promise(s.bind(this))};e.Comunicator=t}(window);
//# sourceMappingURL=comunicator.min.js.map