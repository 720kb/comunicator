{"version":3,"sources":["hapi-plugin.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA,IAAA,OAAA,QAAA,MAAA,CAAA;IACA,MAAA,QAAA,KAAA,CAAA;IACA,gBAAA,IAAA,MAAA,GAAA,IAAA,CAAA;AACA,oBAAA,IAAA,MAAA,GAAA,QAAA,EAAA;AACA,aAAA,IAAA,MAAA,GAAA,QAAA,EAAA;CAFA,CAAA;IAIA,cAAA,KAAA,OAAA,CAAA,SAAA,EAAA,OAAA,EAAA,cAAA,CAAA;IACA,qBAAA,QAAA,WAAA,CAAA;;AAEA,OAAA,OAAA,GAAA,uBAAA;;AAEA,MAAA,wBAAA,SAAA,qBAAA,CAAA,MAAA,EAAA,OAAA,EAAA,IAAA,EAAA;;AAEA,QAAA,OAAA,EAAA;AACA,UAAA,QAAA,CAAA,OAAA,EAAA,aAAA,EAAA,UAAA,GAAA,EAAA,KAAA,EAAA;;AAEA,YAAA,GAAA,EAAA;;AAEA,iBAAA,KAAA,IAAA,KAAA,CAAA,GAAA,CAAA,CAAA,CAFA;SAAA;;AAKA,YAAA,MAAA,EAAA;AACA,cAAA,aAAA,MAAA,cAAA,GAAA,OAAA,MAAA,CAAA,MAAA,cAAA,CAAA,CAAA,QAAA,GAAA,OAAA,WAAA,CAAA,CAAA,EAAA,QAAA,CADA;;AAGA,iBAAA,QAAA,CAAA,QAAA,EAAA,aAAA,EAAA,IAAA,WAAA,CAAA;AACA,sBAAA,UAAA;WADA,EAEA,MAAA,OAAA,CAFA,EAHA;AAMA,iBAAA,MAAA,CANA;SAAA;AAQA,eAAA,KAAA,IAAA,KAAA,CAAA,yBAAA,CAAA,CAAA,CAfA;OAAA,CAAA,CADA;KAAA,MAkBA;;AAEA,aAAA,KAAA,IAAA,KAAA,CAAA,8BAAA,CAAA,CAAA,CAFA;KAlBA;GAFA,CAFA;;AA4BA,wBAAA,UAAA,GAAA;AACA,YAAA,mBAAA,IAAA;AACA,eAAA,mBAAA,OAAA;GAFA,CA5BA;;AAiCA,SAAA;AACA,gBAAA,qBAAA;GADA,CAjCA;CAAA","file":"hapi-plugin.js","sourcesContent":["/**\n* comunicator\n* 3.0.1\n*\n* The 720kb notifier api (atm it uses websockets)\n* https://github.com/720kb/comunicator\n*\n* MIT license\n* Sun Mar 06 2016\n*/\n/*global require,module,__dirname*/\n\nconst path = require('path')\n  , joi = require('joi')\n  , optionsSchema = joi.object().keys({\n      'connectionName': joi.string().alphanum(),\n      'jwtSalt': joi.string().required()\n    })\n  , packageJSON = path.resolve(__dirname, '../..', 'package.json')\n  , packageInformation = require(packageJSON);\n\nmodule.exports = Comunicator => {\n\n  const comunicatorHapiPlugin = (server, options, next) => {\n\n    if (options) {\n      joi.validate(options, optionsSchema, (err, value) => {\n\n        if (err) {\n\n          return next(new Error(err));\n        }\n\n        if (server) {\n          const connection = value.connectionName ? server.select(value.connectionName).listener : server.connections[0].listener;\n\n          server.decorate('server', 'comunicator', new Comunicator({\n            'server': connection\n          }, value.jwtSalt));\n          return next();\n        }\n        return next(new Error('Server is not specified'));\n      });\n    } else {\n\n      return next(new Error('You must specify the options'));\n    }\n  };\n\n  comunicatorHapiPlugin.attributes = {\n    'name': packageInformation.name,\n    'version': packageInformation.version\n  };\n\n  return {\n    'register': comunicatorHapiPlugin\n  };\n};\n"],"sourceRoot":"/source/"}