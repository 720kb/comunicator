{"version":3,"sources":["broadcast.js"],"names":[],"mappings":";;;;;;;;;;;;;AACA,IAAA,KAAA,QAAA,IAAA,CAAA;IACA,QAAA,QAAA,OAAA,EAAA,qCAAA,CAAA;;AAEA,OAAA,OAAA,GAAA;mCAAA;+DAAA,IAAA,GAAA;SAAA;AACA,iBAAA,mBAAA,MAAA,EAAA,IAAA,EAAA;;AAEA,UAAA,CAAA,MAAA,IACA,CAAA,IAAA,EAAA;;AAEA,cAAA,IAAA,KAAA,0CAAA,iBAAA,IAAA,CAAA,CAFA;OADA,MAIA;;AAEA,YAAA,SAAA;AACA,oBAAA,QAAA;AACA,wBAFA;AAGA,oBAHA;SAAA;YAKA,kBAAA,iBAAA,GAAA,CAAA,MAAA,CAAA,CAPA;;AASA,6CAAA,gBAAA,IAAA,EATA;;;;;;AAUA,+BAAA,0CAAA,oGAAA;gBAAA,sBAAA;;;AAEA,gBAAA,WACA,QAAA,MAAA,KAAA,CAAA,IACA,QAAA,CAAA,MAAA,eAAA,IACA,QAAA,CAAA,EAAA,UAAA,KAAA,GAAA,IAAA,EAAA;;AAEA,sBAAA,CAAA,EAAA,IAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,EAFA;aAHA;WAFA;;;;;;;;;;;;;;SAVA;OAJA;KAFA;;CADA","file":"broadcast.js","sourcesContent":["/**\n* comunicator\n* 2.2.4\n*\n* The 720kb notifier api (atm it uses websockets)\n* https://github.com/720kb/comunicator\n*\n* MIT license\n* Thu Feb 25 2016\n*/\n/*global module,require*/\nconst ws = require('ws')\n  , debug = require('debug')('720kb:comunicator:broadcaster:debug');\n\nmodule.exports = ({connectedSockets = new Map()}) => ({\n  'broadcast': (whoami, what) => {\n\n    if (!whoami &&\n      !what) {\n\n      throw new Error(`Mandatory params [whoami] - [what]: ${whoami} - ${what}`);\n    } else {\n\n      const toSend = {\n          'opcode': 'to-all',\n          whoami,\n          what\n        }\n        , whoamiWebSocket = connectedSockets.get(whoami);\n\n      debug(`Broadcasting message from ${whoami}: ${what}`);\n      for (const aSocket of connectedSockets) {\n\n        if (aSocket &&\n          aSocket.length === 2 &&\n          aSocket[1] !== whoamiWebSocket &&\n          aSocket[1].readyState === ws.OPEN) {\n\n          aSocket[1].send(JSON.stringify(toSend));\n        }\n      }\n    }\n  }\n});\n"],"sourceRoot":"/source/"}